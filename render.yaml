

The error `"unknown type 'static_site'"` occurs because **render.yaml (Blueprint) files don't support the `static_site` type**. This type is only available when creating services manually through the dashboard.




Use the corrected render.yaml above, which deploys frontend as a **web service** with Docker:

```yaml
# Frontend as Docker Web Service (Works with render.yaml)
- type: web
  name: taskmaster-frontend
  runtime: image
  image:
    url: docker.io/sapuninethmini/taskmaster-frontend:latest
  plan: starter
  region: oregon
  routes:
    - type: rewrite
      source: /*
      destination: /index.html
  envVars:
    - key: API_BASE_URL
      value: https://api-gateway.onrender.com
```

**Pros:** Everything in one file, easy to manage
**Cons:** More expensive than static site ($7/month vs free)

### Option 2: Hybrid Approach (Recommended)

Deploy **backend via render.yaml** and **frontend manually** as static site:

#### Step 1: Use render.yaml for Backend Only
Remove the frontend section from render.yaml:

```yaml
# render.yaml (Backend only)
databases:
  - name: mysql-user-db
    databaseName: employeeSystem
    user: root
    plan: starter
  - name: mysql-task-db
    databaseName: taskdb
    user: root
    plan: starter

services:
  # Only backend services (eureka, api-gateway, user-service, task-service, notification-service)
  # Remove frontend section completely
```

#### Step 2: Deploy Frontend Separately
After backend is deployed, create frontend manually:

1. **Go to Render Dashboard** → **New** → **Static Site**
2. **Connect your GitHub repository**
3. **Configure build settings:**
   ```
   Build Command: npm install && npm run build
   Publish Directory: dist/taskmaster-frontend
   ```
4. **Add environment variable:**
   ```
   API_BASE_URL = https://api-gateway.onrender.com
   ```

**Pros:** Cheaper (static site is free), better performance
**Cons:** Two-step deployment process

### Option 3: Manual Deployment for Everything

Skip render.yaml entirely and deploy each service manually:

1. **Deploy services one by one** through dashboard
2. **Use static site** for frontend
3. **More control** over each service

## Recommended Approach: Option 2 (Hybrid)

Here's the step-by-step process:

### Step 1: Update render.yaml (Backend Only)

Remove frontend section from your current render.yaml:

```yaml
databases:
  - name: mysql-user-db
    databaseName: employeeSystem
    user: root
    plan: starter
  - name: mysql-task-db
    databaseName: taskdb
    user: root
    plan: starter

services:
  - type: web
    name: eureka-server
    runtime: image
    image:
      url: docker.io/sapuninethmini/eureka-service:latest
    plan: starter
    region: oregon
    healthCheckPath: /actuator/health
    envVars:
      - key: SPRING_PROFILES_ACTIVE
        value: docker
      - key: EUREKA_CLIENT_REGISTER_WITH_EUREKA
        value: "false"
      - key: EUREKA_CLIENT_FETCH_REGISTRY
        value: "false"
      - key: SERVER_PORT
        value: "8761"

  - type: web
    name: api-gateway
    runtime: image
    image:
      url: docker.io/sapuninethmini/taskmaster-api-getway:latest
    plan: starter
    region: oregon
    healthCheckPath: /actuator/health
    envVars:
      - key: SPRING_PROFILES_ACTIVE
        value: docker
      - key: SERVER_PORT
        value: "8080"
      - key: EUREKA_CLIENT_SERVICEURL_DEFAULTZONE
        value: https://eureka-server.onrender.com:8761/eureka/

  - type: web
    name: user-service
    runtime: image
    image:
      url: docker.io/sapuninethmini/taskmaster-user-service:latest
    plan: starter
    region: oregon
    healthCheckPath: /actuator/health
    envVars:
      - key: SPRING_PROFILES_ACTIVE
        value: docker
      - key: SERVER_PORT
        value: "8082"
      - key: EUREKA_CLIENT_SERVICEURL_DEFAULTZONE
        value: https://eureka-server.onrender.com:8761/eureka/
      - key: SPRING_DATASOURCE_URL
        fromDatabase:
          name: mysql-user-db
          property: connectionString
      - key: SPRING_DATASOURCE_USERNAME
        fromDatabase:
          name: mysql-user-db
          property: user
      - key: SPRING_DATASOURCE_PASSWORD
        fromDatabase:
          name: mysql-user-db
          property: password

  - type: web
    name: task-service
    runtime: image
    image:
      url: docker.io/sapuninethmini/taskmaster-task-service:latest
    plan: starter
    region: oregon
    healthCheckPath: /actuator/health
    envVars:
      - key: SPRING_PROFILES_ACTIVE
        value: docker
      - key: SERVER_PORT
        value: "8084"
      - key: EUREKA_CLIENT_SERVICEURL_DEFAULTZONE
        value: https://eureka-server.onrender.com:8761/eureka/
      - key: SPRING_DATASOURCE_URL
        fromDatabase:
          name: mysql-task-db
          property: connectionString
      - key: SPRING_DATASOURCE_USERNAME
        fromDatabase:
          name: mysql-task-db
          property: user
      - key: SPRING_DATASOURCE_PASSWORD
        fromDatabase:
          name: mysql-task-db
          property: password

  - type: web
    name: notification-service
    runtime: image
    image:
      url: docker.io/sapuninethmini/taskmaster-notification-service:latest
    plan: starter
    region: oregon
    envVars:
      - key: SPRING_PROFILES_ACTIVE
        value: docker
      - key: SERVER_PORT
        value: "8085"
      - key: EUREKA_CLIENT_SERVICEURL_DEFAULTZONE
        value: https://eureka-server.onrender.com:8761/eureka/
      - key: EMAIL_USERNAME
        value: saragamage111@gmail.com
      - key: EMAIL_PASSWORD
        value: Kusum2000
```

### Step 2: Deploy Backend with Blueprint

1. **Update your render.yaml** with the backend-only version
2. **Commit and push:**
   ```bash
   git add render.yaml
   git commit -m "Deploy backend services only"
   git push origin main
   ```
3. **Deploy Blueprint** in Render Dashboard

### Step 3: Deploy Frontend as Static Site

After backend is running:

1. **New Static Site** in Render Dashboard
2. **Connect repository** (same repo is fine)
3. **Build settings:**
   ```
   Root Directory: frontend  (if your Angular app is in a subfolder)
   Build Command: npm install && npm run build
   Publish Directory: dist/taskmaster-frontend
   ```
4. **Environment Variables:**
   ```
   API_BASE_URL = https://api-gateway.onrender.com
   ```
5. **Advanced settings - Redirects:**
   ```
   /*  /index.html  200
   ```

## Quick Fix for Current Error

To immediately fix your current render.yaml error, **use the corrected version above** (Option 1) which replaces `static_site` with `web` service.

Then you can deploy and decide later if you want to optimize by switching to static site.

## Cost Comparison

| Approach | Monthly Cost |
|----------|-------------|
| Option 1 (All web services) | ~$42/month |
| Option 2 (Backend web + Frontend static) | ~$35/month |
| Option 3 (Manual with static frontend) | ~$35/month |

**Recommendation:** Use Option 2 for the best balance of cost and maintainability.

Would you like me to help you implement any of these approaches?
